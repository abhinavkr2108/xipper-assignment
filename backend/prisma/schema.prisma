// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  aadhar    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  bookings Booking[]
}

model Hotel {
  id            String    @id @default(uuid())
  name          String
  description   String
  address       String
  city          String
  country       String
  stars         Int
  pricePerNight Decimal   @db.Decimal(10, 2)
  image         String
  bookings      Booking[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Booking {
  id           String        @id @default(uuid())
  userId       String
  hotelId      String
  checkInDate  DateTime
  checkOutDate DateTime
  totalPrice   Decimal       @db.Decimal(10, 2)
  status       BookingStatus @default(PENDING)
  checkIn      CheckIn?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt

  user  User  @relation(fields: [userId], references: [id], onDelete: Cascade)
  hotel Hotel @relation(fields: [hotelId], references: [id], onDelete: Cascade)
}

model CheckIn {
  id           String        @id @default(uuid())
  bookingId    String        @unique
  booking      Booking       @relation(fields: [bookingId], references: [id])
  userId       String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  guestDetails GuestDetail[]
}

model GuestDetail {
  id            String  @id @default(uuid())
  checkInId     String
  checkIn       CheckIn @relation(fields: [checkInId], references: [id])
  name          String
  aadhaarNumber String
}

enum BookingStatus {
  PENDING
  CONFIRMED
  CANCELLED
  COMPLETED
}
